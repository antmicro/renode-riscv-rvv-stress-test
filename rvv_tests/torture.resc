using sysbus
mach create "torture"

machine LoadPlatformDescriptionFromString
"""
cpu: CPU.RiscV32 @ sysbus
    cpuType: "rv32gcv"
    privilegeArchitecture: PrivilegeArchitecture.Priv1_10
    timeProvider: empty

dram: Memory.MappedMemory @ sysbus 0x80000000
    size: 0x06400000
"""

sysbus LoadELF $ORIGIN/test

cpu AddHook `sysbus GetSymbolAddress "test_end"`
"""
time.sleep(1)
start_addr = cpu.Bus.GetSymbolAddress("begin_signature")
end_addr = cpu.Bus.GetSymbolAddress("end_signature")

with open("/tmp/test.renode.sig", "w") as f:
    curr_addr = start_addr
    while curr_addr < end_addr:
      s = ""
      for j in range(16, 0, -1):
        s += "%02x" % cpu.Bus.ReadByte(curr_addr+j-1)
      curr_addr += 16
      f.write(s + "\n")
      cpu.Log(LogLevel.Info,"SIG> " + s) 

emulationManager.CurrentEmulation.AddOrUpdateInBag('status', 'finished')
"""

cpu AddHook `sysbus GetSymbolAddress "write_tohost"`
"""
time.sleep(1)
start_addr = cpu.Bus.GetSymbolAddress("begin_signature")
end_addr = cpu.Bus.GetSymbolAddress("end_signature")

with open("/tmp/test.renode.sig", "w") as f:
    curr_addr = start_addr
    while curr_addr < end_addr:
      s = ""
      for j in range(16, 0, -1):
        s += "%02x" % cpu.Bus.ReadByte(curr_addr+j-1)
      curr_addr += 16
      f.write(s + "\n")
      cpu.Log(LogLevel.Info, "SIG> " + s) 

emulationManager.CurrentEmulation.AddOrUpdateInBag('status', 'finished')
"""

cpu LogFunctionNames true
cpu MaximumBlockSize 1
logLevel -1
logFile $ORIGIN/renode.log
logLevel 2 console

start

# wait for the test to finish, then quit
python
"""
while not emulationManager.CurrentEmulation.TryGetFromBag[str]('status')[0]:
    time.sleep(0.1)
monitor.Parse('q')
"""

